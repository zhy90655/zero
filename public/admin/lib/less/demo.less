/* 4. 导入 
	可以把别的less文件导入到当前less文件 
	语法@import "less文件名" 扩展名可以省略*/

@import "base.less";

/* 
1. 定义变量
@变量名:变量值; 
2. 使用变量
	属性:@变量名;*/
@baoqianglv: #00aa00+100;
#header {
    width: 100px+100;
    height: 100px;
    color: @baoqianglv;
    .borderRadius;
    background-color: hotpink;
}

span {
    width: 100px;
    height: 100px;
    display: block;
    color: @baoqianglv;
    .borderRadius;
    background-color: green;
}

a {
    width: 100px;
    height: 100px;
    display: block;
    color: @baoqianglv;
    /* .borderRadius; */
    .borderRadius(50px);
    background-color: blue;
}


/* 2. 混合（定义函数） Mixin */


/* .bordertb{
	border-top: 1px solid #ccc;
	border-bottom: 1px solid #ccc;
} */


/* 
@r:10px给形参赋默认值
.函数名(形参){
	函数代码属性:值/形参;
} */

.borderRadius(@r: 10px) {
    border-radius: @r;
    -webkit-border-radius: @r;
    -moz-border-radius: @r;
    -ms-border-radius: @r;
}


/* 3. 嵌套 */


/* css嵌套 在less里面也能用 */

.container {
    padding: 0 15px;
}

.container .row {
    border-bottom: 1px solid #ccc;
}

.container .row div {
    color: @baoqianglv;
}


/* less嵌套就跟标签嵌套关系一样 */

.container {
    padding: 0 15px;
    .row {
        border-bottom: 1px solid #ccc;
        div {
            color: @baoqianglv;
        }
    }
}

/* 嵌套还有一个关键字 & */

a:hover{
	color:#666;
}
a{
	/* &就代表当前的a就跟JSthis */
	&:hover{

	}
}

div::before{
	content: '伪元素';
}

div{
	/* &表示当前的div */
	&::before{
		content: '伪元素';
	}
}

li.active{

}
li{
	/* &表示当前的li */
	&.active{

	}
}

/* &通常用在伪类 伪元素 和交集选择器里面 写在哪个大括号里面就表示当前大括号的这个元素 */

//注释在Less也可以写 但是这种注释编译后会删掉

/*   /*的注释编译后还会存在 */


@images: "../img";

// 用法
body {
  color: #444;
  background: url("@{images}/slide_01_2000x410.jpg");
}